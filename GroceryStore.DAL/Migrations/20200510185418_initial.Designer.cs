// <auto-generated />
using System;
using GroceryStore.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GroceryStore.DAL.Migrations
{
    [DbContext(typeof(GroceryStoreDbContext))]
    [Migration("20200510185418_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GroceryStore.Core.Models.Basket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Basket")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<int?>("IdGoodsInMarket")
                        .HasColumnName("Id_Goods_in_Market")
                        .HasColumnType("int");

                    b.Property<int?>("IdSale")
                        .HasColumnName("Id_Sale")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("XPKBasket");

                    b.HasIndex("IdGoodsInMarket");

                    b.HasIndex("IdSale");

                    b.ToTable("Basket");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.BasketOwn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Basket_Own")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<int?>("IdGoodsInMarketOwn")
                        .HasColumnName("Id_Goods_in_Market_Own")
                        .HasColumnType("int");

                    b.Property<int?>("IdSale")
                        .HasColumnName("Id_Sale")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("XPKBasket_Own");

                    b.HasIndex("IdGoodsInMarketOwn");

                    b.HasIndex("IdSale");

                    b.ToTable("Basket_Own");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Category")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Title")
                        .HasColumnType("varchar(40)")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.HasKey("Id")
                        .HasName("XPKCategory");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_City")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdCountry")
                        .HasColumnName("Id_Country")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id")
                        .HasName("XPKCity");

                    b.HasIndex("IdCountry");

                    b.ToTable("City");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Client")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber")
                        .HasColumnName("Account_Number")
                        .HasColumnType("varchar(12)")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<string>("Address")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<double?>("Bonuses")
                        .HasColumnType("float");

                    b.Property<string>("FirstName")
                        .HasColumnName("First_Name")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<int?>("IdCity")
                        .HasColumnName("Id_City")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnName("Last_Name")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("Phone_Number")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("Id")
                        .HasName("XPKClient");

                    b.HasIndex("IdCity");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.Consignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Consignment")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("BestBefore")
                        .HasColumnName("Best_Before")
                        .HasColumnType("date");

                    b.Property<string>("ConsignmentNumber")
                        .HasColumnName("Consignment_Number")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int?>("IdGoods")
                        .HasColumnName("Id_Goods")
                        .HasColumnType("int");

                    b.Property<double?>("IncomePrice")
                        .HasColumnName("Income_Price")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ManufactureDate")
                        .HasColumnName("Manufacture_Date")
                        .HasColumnType("date");

                    b.HasKey("Id")
                        .HasName("XPKConsignment");

                    b.HasIndex("IdGoods");

                    b.ToTable("Consignment");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Country")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id")
                        .HasName("XPKCountry");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.Delivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Delivery")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnName("Delivery_Date")
                        .HasColumnType("datetime");

                    b.Property<string>("DeliveryNumber")
                        .HasColumnName("Delivery_Number")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int?>("IdProvider")
                        .HasColumnName("Id_Provider")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("XPKDelivery");

                    b.HasIndex("IdProvider");

                    b.ToTable("Delivery");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.DeliveryContents", b =>
                {
                    b.Property<int>("IdConsignment")
                        .HasColumnName("Id_Consignment")
                        .HasColumnType("int");

                    b.Property<int>("IdDelivery")
                        .HasColumnName("Id_Delivery")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Delivery_Contents")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("IdConsignment", "IdDelivery")
                        .HasName("XPKDelivery_Contents");

                    b.HasIndex("IdDelivery");

                    b.ToTable("Delivery_Contents");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.DeliveryShipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Delivery_Shipment")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<int?>("IdConsignment")
                        .HasColumnName("Id_Consignment")
                        .HasColumnType("int");

                    b.Property<int?>("IdGoodsInMarket")
                        .HasColumnName("Id_Goods_in_Market")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ShipmentDateTime")
                        .HasColumnName("Shipment_Date_Time")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("XPKDelivery_Shipment");

                    b.HasIndex("IdConsignment");

                    b.HasIndex("IdGoodsInMarket");

                    b.ToTable("Delivery_Shipment");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Employee")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .HasColumnName("First_Name")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<int?>("IdCity")
                        .HasColumnName("Id_City")
                        .HasColumnType("int");

                    b.Property<int?>("IdMarket")
                        .HasColumnName("Id_Market")
                        .HasColumnType("int");

                    b.Property<int?>("IdRole")
                        .HasColumnName("Id_Role")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnName("Last_Name")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("Login")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Password")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("Phone_Number")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int?>("WorkExperience")
                        .HasColumnName("Work_Experience")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("XPKEmployee");

                    b.HasIndex("IdCity");

                    b.HasIndex("IdMarket");

                    b.HasIndex("IdRole");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.Goods", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Goods")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Components")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Description")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int?>("IdCategory")
                        .HasColumnName("Id_Category")
                        .HasColumnType("int");

                    b.Property<int?>("IdProducer")
                        .HasColumnName("Id_Producer")
                        .HasColumnType("int");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductCode")
                        .HasColumnName("Product_Code")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("Title")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id")
                        .HasName("XPKGoods");

                    b.HasIndex("IdCategory");

                    b.HasIndex("IdProducer");

                    b.ToTable("Goods");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.GoodsInMarket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Goods_in_Market")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<int?>("IdGoods")
                        .HasColumnName("Id_Goods")
                        .HasColumnType("int");

                    b.Property<int?>("IdMarket")
                        .HasColumnName("Id_Market")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("XPKGoods_in_Market");

                    b.HasIndex("IdGoods");

                    b.HasIndex("IdMarket");

                    b.ToTable("Goods_in_Market");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.GoodsInMarketOwn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Goods_in_Market_Own")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<int?>("IdMarket")
                        .HasColumnName("Id_Market")
                        .HasColumnType("int");

                    b.Property<int?>("IdProduction")
                        .HasColumnName("Id_Production")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("XPKGoods_in_Market_Own");

                    b.HasIndex("IdMarket");

                    b.HasIndex("IdProduction");

                    b.ToTable("Goods_in_Market_Own");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.GoodsOwn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Goods_Own")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Components")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<int?>("IdCategory")
                        .HasColumnName("Id_Category")
                        .HasColumnType("int");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductCode")
                        .HasColumnName("Product_Code")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Title")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id")
                        .HasName("XPKGoods_Own");

                    b.HasIndex("IdCategory");

                    b.ToTable("Goods_Own");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.GoodsWriteOff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Goods_Write_off")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdDeliveryShipment")
                        .HasColumnName("Id_Delivery_Shipment")
                        .HasColumnType("int");

                    b.Property<int?>("IdEmployee")
                        .HasColumnName("Id_Employee")
                        .HasColumnType("int");

                    b.Property<int?>("IdGoodsInMarket")
                        .HasColumnName("Id_Goods_in_Market")
                        .HasColumnType("int");

                    b.Property<int?>("IdWriteOffReason")
                        .HasColumnName("Id_Write_off_Reason")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("XPKGoods_Write_off");

                    b.HasIndex("IdDeliveryShipment");

                    b.HasIndex("IdEmployee");

                    b.HasIndex("IdGoodsInMarket");

                    b.HasIndex("IdWriteOffReason");

                    b.ToTable("Goods_Write_off");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.GoodsWriteOffOwn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Goods_Write_off_Own")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdEmployee")
                        .HasColumnName("Id_Employee")
                        .HasColumnType("int");

                    b.Property<int?>("IdGoodsInMarketOwn")
                        .HasColumnName("Id_Goods_in_Market_Own")
                        .HasColumnType("int");

                    b.Property<int?>("IdProduction")
                        .HasColumnName("Id_Production")
                        .HasColumnType("int");

                    b.Property<int?>("IdWriteOffReason")
                        .HasColumnName("Id_Write_off_Reason")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("XPKGoods_Write_off_Own");

                    b.HasIndex("IdEmployee");

                    b.HasIndex("IdGoodsInMarketOwn");

                    b.HasIndex("IdProduction");

                    b.HasIndex("IdWriteOffReason");

                    b.ToTable("Goods_Write_off_Own");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.Market", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Market")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("IdCity")
                        .HasColumnName("Id_City")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("Phone_Number")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("Id")
                        .HasName("XPKMarket");

                    b.HasIndex("IdCity");

                    b.ToTable("Market");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.Producer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Producer")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdCountry")
                        .HasColumnName("Id_Country")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id")
                        .HasName("XPKProducer");

                    b.HasIndex("IdCountry");

                    b.ToTable("Producer");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.Production", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Production")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BestBefore")
                        .HasColumnName("Best_Before")
                        .HasColumnType("date");

                    b.Property<int?>("IdEmployee")
                        .HasColumnName("Id_Employee")
                        .HasColumnType("int");

                    b.Property<int?>("IdGoodsOwn")
                        .HasColumnName("Id_Goods_Own")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ManufactureDate")
                        .HasColumnName("Manufacture_Date")
                        .HasColumnType("date");

                    b.Property<string>("ProductionCode")
                        .HasColumnName("Production_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TotalCost")
                        .HasColumnName("Total_Cost")
                        .HasColumnType("float");

                    b.HasKey("Id")
                        .HasName("XPKProduction");

                    b.HasIndex("IdEmployee");

                    b.HasIndex("IdGoodsOwn");

                    b.ToTable("Production");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.ProductionContents", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Production_Contents")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<int?>("IdGoodsInMarket")
                        .HasColumnName("Id_Goods_in_Market")
                        .HasColumnType("int");

                    b.Property<int?>("IdProduction")
                        .HasColumnName("Id_Production")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("XPKProduction_Contents");

                    b.HasIndex("IdGoodsInMarket");

                    b.HasIndex("IdProduction");

                    b.ToTable("Production_Contents");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Provider")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CompanyTitle")
                        .HasColumnName("Company_Title")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ContactPerson")
                        .HasColumnName("Contact_Person")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("IdCity")
                        .HasColumnName("Id_City")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("Phone_Number")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("Id")
                        .HasName("XPKProvider");

                    b.HasIndex("IdCity");

                    b.ToTable("Provider");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Role")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Salary")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(25)")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.HasKey("Id")
                        .HasName("XPKRole");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Sale")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CheckNumber")
                        .HasColumnName("Check_Number")
                        .HasColumnType("varchar(16)")
                        .HasMaxLength(16)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdClient")
                        .HasColumnName("Id_Client")
                        .HasColumnType("int");

                    b.Property<int?>("IdEmployee")
                        .HasColumnName("Id_Employee")
                        .HasColumnType("int");

                    b.Property<double?>("Total")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Id")
                        .HasName("XPKSale");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdEmployee");

                    b.ToTable("Sale");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.WriteOffReason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Write_off_Reason")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.HasKey("Id")
                        .HasName("XPKWrite_off_Reason");

                    b.ToTable("Write_off_Reason");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.Basket", b =>
                {
                    b.HasOne("GroceryStore.Core.Models.GoodsInMarket", "IdGoodsInMarketNavigation")
                        .WithMany("Basket")
                        .HasForeignKey("IdGoodsInMarket")
                        .HasConstraintName("R_35");

                    b.HasOne("GroceryStore.Core.Models.Sale", "IdSaleNavigation")
                        .WithMany("Basket")
                        .HasForeignKey("IdSale")
                        .HasConstraintName("R_38");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.BasketOwn", b =>
                {
                    b.HasOne("GroceryStore.Core.Models.GoodsInMarketOwn", "IdGoodsInMarketOwnNavigation")
                        .WithMany("BasketOwn")
                        .HasForeignKey("IdGoodsInMarketOwn")
                        .HasConstraintName("R_36");

                    b.HasOne("GroceryStore.Core.Models.Sale", "IdSaleNavigation")
                        .WithMany("BasketOwn")
                        .HasForeignKey("IdSale")
                        .HasConstraintName("R_37");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.City", b =>
                {
                    b.HasOne("GroceryStore.Core.Models.Country", "IdCountryNavigation")
                        .WithMany("City")
                        .HasForeignKey("IdCountry")
                        .HasConstraintName("R_14");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.Client", b =>
                {
                    b.HasOne("GroceryStore.Core.Models.City", "IdCityNavigation")
                        .WithMany("Client")
                        .HasForeignKey("IdCity")
                        .HasConstraintName("R_33");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.Consignment", b =>
                {
                    b.HasOne("GroceryStore.Core.Models.Goods", "IdGoodsNavigation")
                        .WithMany("Consignment")
                        .HasForeignKey("IdGoods")
                        .HasConstraintName("R_11");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.Delivery", b =>
                {
                    b.HasOne("GroceryStore.Core.Models.Provider", "IdProviderNavigation")
                        .WithMany("Delivery")
                        .HasForeignKey("IdProvider")
                        .HasConstraintName("R_2");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.DeliveryContents", b =>
                {
                    b.HasOne("GroceryStore.Core.Models.Consignment", "IdConsignmentNavigation")
                        .WithMany("DeliveryContents")
                        .HasForeignKey("IdConsignment")
                        .HasConstraintName("R_10")
                        .IsRequired();

                    b.HasOne("GroceryStore.Core.Models.Delivery", "IdDeliveryNavigation")
                        .WithMany("DeliveryContents")
                        .HasForeignKey("IdDelivery")
                        .HasConstraintName("R_67")
                        .IsRequired();
                });

            modelBuilder.Entity("GroceryStore.Core.Models.DeliveryShipment", b =>
                {
                    b.HasOne("GroceryStore.Core.Models.Consignment", "IdConsignmentNavigation")
                        .WithMany("DeliveryShipment")
                        .HasForeignKey("IdConsignment")
                        .HasConstraintName("R_47");

                    b.HasOne("GroceryStore.Core.Models.GoodsInMarket", "IdGoodsInMarketNavigation")
                        .WithMany("DeliveryShipment")
                        .HasForeignKey("IdGoodsInMarket")
                        .HasConstraintName("R_48");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.Employee", b =>
                {
                    b.HasOne("GroceryStore.Core.Models.City", "IdCityNavigation")
                        .WithMany("Employee")
                        .HasForeignKey("IdCity")
                        .HasConstraintName("R_27");

                    b.HasOne("GroceryStore.Core.Models.Market", "IdMarketNavigation")
                        .WithMany("Employee")
                        .HasForeignKey("IdMarket")
                        .HasConstraintName("R_24");

                    b.HasOne("GroceryStore.Core.Models.Role", "IdRoleNavigation")
                        .WithMany("Employee")
                        .HasForeignKey("IdRole")
                        .HasConstraintName("R_25");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.Goods", b =>
                {
                    b.HasOne("GroceryStore.Core.Models.Category", "IdCategoryNavigation")
                        .WithMany("Goods")
                        .HasForeignKey("IdCategory")
                        .HasConstraintName("R_13");

                    b.HasOne("GroceryStore.Core.Models.Producer", "IdProducerNavigation")
                        .WithMany("Goods")
                        .HasForeignKey("IdProducer")
                        .HasConstraintName("R_16");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.GoodsInMarket", b =>
                {
                    b.HasOne("GroceryStore.Core.Models.Goods", "IdGoodsNavigation")
                        .WithMany("GoodsInMarket")
                        .HasForeignKey("IdGoods")
                        .HasConstraintName("R_32");

                    b.HasOne("GroceryStore.Core.Models.Market", "IdMarketNavigation")
                        .WithMany("GoodsInMarket")
                        .HasForeignKey("IdMarket")
                        .HasConstraintName("R_19");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.GoodsInMarketOwn", b =>
                {
                    b.HasOne("GroceryStore.Core.Models.Market", "IdMarketNavigation")
                        .WithMany("GoodsInMarketOwn")
                        .HasForeignKey("IdMarket")
                        .HasConstraintName("R_31");

                    b.HasOne("GroceryStore.Core.Models.Production", "IdProductionNavigation")
                        .WithMany("GoodsInMarketOwn")
                        .HasForeignKey("IdProduction")
                        .HasConstraintName("R_30");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.GoodsOwn", b =>
                {
                    b.HasOne("GroceryStore.Core.Models.Category", "IdCategoryNavigation")
                        .WithMany("GoodsOwn")
                        .HasForeignKey("IdCategory")
                        .HasConstraintName("R_20");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.GoodsWriteOff", b =>
                {
                    b.HasOne("GroceryStore.Core.Models.DeliveryShipment", "IdDeliveryShipmentNavigation")
                        .WithMany("GoodsWriteOff")
                        .HasForeignKey("IdDeliveryShipment")
                        .HasConstraintName("R_49");

                    b.HasOne("GroceryStore.Core.Models.Employee", "IdEmployeeNavigation")
                        .WithMany("GoodsWriteOff")
                        .HasForeignKey("IdEmployee")
                        .HasConstraintName("R_41");

                    b.HasOne("GroceryStore.Core.Models.GoodsInMarket", "IdGoodsInMarketNavigation")
                        .WithMany("GoodsWriteOff")
                        .HasForeignKey("IdGoodsInMarket")
                        .HasConstraintName("R_50");

                    b.HasOne("GroceryStore.Core.Models.WriteOffReason", "IdWriteOffReasonNavigation")
                        .WithMany("GoodsWriteOff")
                        .HasForeignKey("IdWriteOffReason")
                        .HasConstraintName("R_42");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.GoodsWriteOffOwn", b =>
                {
                    b.HasOne("GroceryStore.Core.Models.Employee", "IdEmployeeNavigation")
                        .WithMany("GoodsWriteOffOwn")
                        .HasForeignKey("IdEmployee")
                        .HasConstraintName("R_53");

                    b.HasOne("GroceryStore.Core.Models.GoodsInMarketOwn", "IdGoodsInMarketOwnNavigation")
                        .WithMany("GoodsWriteOffOwn")
                        .HasForeignKey("IdGoodsInMarketOwn")
                        .HasConstraintName("R_52");

                    b.HasOne("GroceryStore.Core.Models.Production", "IdProductionNavigation")
                        .WithMany("GoodsWriteOffOwn")
                        .HasForeignKey("IdProduction")
                        .HasConstraintName("R_55");

                    b.HasOne("GroceryStore.Core.Models.WriteOffReason", "IdWriteOffReasonNavigation")
                        .WithMany("GoodsWriteOffOwn")
                        .HasForeignKey("IdWriteOffReason")
                        .HasConstraintName("R_54");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.Market", b =>
                {
                    b.HasOne("GroceryStore.Core.Models.City", "IdCityNavigation")
                        .WithMany("Market")
                        .HasForeignKey("IdCity")
                        .HasConstraintName("R_18");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.Producer", b =>
                {
                    b.HasOne("GroceryStore.Core.Models.Country", "IdCountryNavigation")
                        .WithMany("Producer")
                        .HasForeignKey("IdCountry")
                        .HasConstraintName("R_15");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.Production", b =>
                {
                    b.HasOne("GroceryStore.Core.Models.Employee", "IdEmployeeNavigation")
                        .WithMany("Production")
                        .HasForeignKey("IdEmployee")
                        .HasConstraintName("R_26");

                    b.HasOne("GroceryStore.Core.Models.GoodsOwn", "IdGoodsOwnNavigation")
                        .WithMany("Production")
                        .HasForeignKey("IdGoodsOwn")
                        .HasConstraintName("R_22");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.ProductionContents", b =>
                {
                    b.HasOne("GroceryStore.Core.Models.GoodsInMarket", "IdGoodsInMarketNavigation")
                        .WithMany("ProductionContents")
                        .HasForeignKey("IdGoodsInMarket")
                        .HasConstraintName("R_46");

                    b.HasOne("GroceryStore.Core.Models.Production", "IdProductionNavigation")
                        .WithMany("ProductionContents")
                        .HasForeignKey("IdProduction")
                        .HasConstraintName("R_45");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.Provider", b =>
                {
                    b.HasOne("GroceryStore.Core.Models.City", "IdCityNavigation")
                        .WithMany("Provider")
                        .HasForeignKey("IdCity")
                        .HasConstraintName("R_4");
                });

            modelBuilder.Entity("GroceryStore.Core.Models.Sale", b =>
                {
                    b.HasOne("GroceryStore.Core.Models.Client", "IdClientNavigation")
                        .WithMany("Sale")
                        .HasForeignKey("IdClient")
                        .HasConstraintName("R_39");

                    b.HasOne("GroceryStore.Core.Models.Employee", "IdEmployeeNavigation")
                        .WithMany("Sale")
                        .HasForeignKey("IdEmployee")
                        .HasConstraintName("R_44");
                });
#pragma warning restore 612, 618
        }
    }
}
